-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DB.Object.ProjectsSubscriptionPayload exposing (mutation, node, previousValues, updatedFields)

import DB.Enum.MutationType
import DB.Object
import Graphql.Internal.Builder.Object as Object
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


mutation : SelectionSet DB.Enum.MutationType.MutationType DB.Object.ProjectsSubscriptionPayload
mutation =
    Object.selectionForField "Enum.MutationType.MutationType" "mutation" [] DB.Enum.MutationType.decoder


node : SelectionSet decodesTo DB.Object.Projects -> SelectionSet (Maybe decodesTo) DB.Object.ProjectsSubscriptionPayload
node object_ =
    Object.selectionForCompositeField "node" [] object_ (identity >> Decode.nullable)


updatedFields : SelectionSet (Maybe (List String)) DB.Object.ProjectsSubscriptionPayload
updatedFields =
    Object.selectionForField "(Maybe (List String))" "updatedFields" [] (Decode.string |> Decode.list |> Decode.nullable)


previousValues : SelectionSet decodesTo DB.Object.ProjectsPreviousValues -> SelectionSet (Maybe decodesTo) DB.Object.ProjectsSubscriptionPayload
previousValues object_ =
    Object.selectionForCompositeField "previousValues" [] object_ (identity >> Decode.nullable)
