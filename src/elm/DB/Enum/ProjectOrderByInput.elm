-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DB.Enum.ProjectOrderByInput exposing (ProjectOrderByInput(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


type ProjectOrderByInput
    = Status_ASC
    | Status_DESC
    | Id_ASC
    | Id_DESC
    | CreatedAt_ASC
    | CreatedAt_DESC
    | UpdatedAt_ASC
    | UpdatedAt_DESC
    | Name_ASC
    | Name_DESC
    | Description_ASC
    | Description_DESC
    | MyWork_ASC
    | MyWork_DESC
    | Link_ASC
    | Link_DESC


list : List ProjectOrderByInput
list =
    [ Status_ASC, Status_DESC, Id_ASC, Id_DESC, CreatedAt_ASC, CreatedAt_DESC, UpdatedAt_ASC, UpdatedAt_DESC, Name_ASC, Name_DESC, Description_ASC, Description_DESC, MyWork_ASC, MyWork_DESC, Link_ASC, Link_DESC ]


decoder : Decoder ProjectOrderByInput
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "status_ASC" ->
                        Decode.succeed Status_ASC

                    "status_DESC" ->
                        Decode.succeed Status_DESC

                    "id_ASC" ->
                        Decode.succeed Id_ASC

                    "id_DESC" ->
                        Decode.succeed Id_DESC

                    "createdAt_ASC" ->
                        Decode.succeed CreatedAt_ASC

                    "createdAt_DESC" ->
                        Decode.succeed CreatedAt_DESC

                    "updatedAt_ASC" ->
                        Decode.succeed UpdatedAt_ASC

                    "updatedAt_DESC" ->
                        Decode.succeed UpdatedAt_DESC

                    "name_ASC" ->
                        Decode.succeed Name_ASC

                    "name_DESC" ->
                        Decode.succeed Name_DESC

                    "description_ASC" ->
                        Decode.succeed Description_ASC

                    "description_DESC" ->
                        Decode.succeed Description_DESC

                    "myWork_ASC" ->
                        Decode.succeed MyWork_ASC

                    "myWork_DESC" ->
                        Decode.succeed MyWork_DESC

                    "link_ASC" ->
                        Decode.succeed Link_ASC

                    "link_DESC" ->
                        Decode.succeed Link_DESC

                    _ ->
                        Decode.fail ("Invalid ProjectOrderByInput type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : ProjectOrderByInput -> String
toString enum =
    case enum of
        Status_ASC ->
            "status_ASC"

        Status_DESC ->
            "status_DESC"

        Id_ASC ->
            "id_ASC"

        Id_DESC ->
            "id_DESC"

        CreatedAt_ASC ->
            "createdAt_ASC"

        CreatedAt_DESC ->
            "createdAt_DESC"

        UpdatedAt_ASC ->
            "updatedAt_ASC"

        UpdatedAt_DESC ->
            "updatedAt_DESC"

        Name_ASC ->
            "name_ASC"

        Name_DESC ->
            "name_DESC"

        Description_ASC ->
            "description_ASC"

        Description_DESC ->
            "description_DESC"

        MyWork_ASC ->
            "myWork_ASC"

        MyWork_DESC ->
            "myWork_DESC"

        Link_ASC ->
            "link_ASC"

        Link_DESC ->
            "link_DESC"
